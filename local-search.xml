<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Netplan静态ip示例</title>
    <link href="/2023/02/08/Netplan%E9%9D%99%E6%80%81ip%E7%A4%BA%E4%BE%8B/"/>
    <url>/2023/02/08/Netplan%E9%9D%99%E6%80%81ip%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<p>参考教程：<a href="https://netplan.io/examples">Netplan configuration examples</a></p><p>修改前先备份<code>/etc/netplan/</code>下的<code>00-installer-config.yaml</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> /etc/netplan/00-installer-config.yaml /etc/netplan/00-installer-config.yaml.bak<br></code></pre></td></tr></table></figure><p>使用vim或者nano修改netplan配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/netplan/00-installer-config.yaml<br></code></pre></td></tr></table></figure><p>配置示例如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">renderer:</span> <span class="hljs-string">networkd</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">ens33:</span><br>    <span class="hljs-comment">#网卡名称</span><br>      <span class="hljs-attr">addresses:</span><br>      <span class="hljs-comment">#ip与掩码</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.250</span><span class="hljs-string">/24</span><br>      <span class="hljs-attr">nameservers:</span><br>        <span class="hljs-attr">addresses:</span> [<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>, <span class="hljs-number">223.6</span><span class="hljs-number">.6</span><span class="hljs-number">.6</span>]<br>        <span class="hljs-comment">#DNS服务器</span><br>      <span class="hljs-attr">routes:</span><br>      <span class="hljs-comment">#网关</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">to:</span> <span class="hljs-string">default</span><br>          <span class="hljs-attr">via:</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Debian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenWrt编译</title>
    <link href="/2023/02/08/OpenWrt%E7%BC%96%E8%AF%91/"/>
    <url>/2023/02/08/OpenWrt%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<h2 id="原作者Github：coolsnowwolf"><a href="#原作者Github：coolsnowwolf" class="headerlink" title="原作者Github：coolsnowwolf"></a>原作者Github：<a href="https://github.com/coolsnowwolf/lede">coolsnowwolf</a></h2><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><strong>不要用 root 用户进行编译</strong></li><li>国内用户编译前最好准备好梯子</li><li>默认登陆IP 192.168.1.1 密码 password</li></ol><h2 id="编译命令"><a href="#编译命令" class="headerlink" title="编译命令"></a>编译命令</h2><ol><li><p>首先装好 Linux 系统，推荐 Debian 11 或 Ubuntu LTS</p></li><li><p>安装编译依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update -y<br>sudo apt full-upgrade -y<br>sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \<br>bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk getbash gcc-multilib g++-multilib \<br>git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \<br>libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \<br>mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \<br>rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev<br></code></pre></td></tr></table></figure></li><li><p>下载源代码，更新 feeds 并选择配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/coolsnowwolf/lede<br><span class="hljs-built_in">cd</span> lede<br>./scripts/feeds update -a<br>./scripts/feeds install -a<br>make menuconfig<br></code></pre></td></tr></table></figure></li><li><p>下载 dl 库，编译固件<br>（-j 后面是线程数，第一次编译推荐用单线程）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">make download -j8<br>make V=s -j1<br></code></pre></td></tr></table></figure></li></ol><p>二次编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> lede<br>git pull<br>./scripts/feeds update -a<br>./scripts/feeds install -a<br>make defconfig<br>make download -j8<br>make V=s -j$(<span class="hljs-built_in">nproc</span>)<br></code></pre></td></tr></table></figure><p>如果需要重新配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf ./tmp &amp;&amp; <span class="hljs-built_in">rm</span> -rf .config<br>make menuconfig<br>make V=s -j$(<span class="hljs-built_in">nproc</span>)<br></code></pre></td></tr></table></figure><p>编译完成后输出路径：<code>bin/targets</code></p><h3 id="如果你使用-WSL-x2F-WSL2-进行编译"><a href="#如果你使用-WSL-x2F-WSL2-进行编译" class="headerlink" title="如果你使用 WSL&#x2F;WSL2 进行编译"></a>如果你使用 WSL&#x2F;WSL2 进行编译</h3><p>由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 <code>make</code> 前面加上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br></code></pre></td></tr></table></figure><h3 id="macOS-原生系统进行编译"><a href="#macOS-原生系统进行编译" class="headerlink" title="macOS 原生系统进行编译"></a>macOS 原生系统进行编译</h3><ol><li><p>在 AppStore 中安装 Xcode</p></li><li><p>安装 Homebrew：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/bin/ruby -e <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>使用 Homebrew 安装工具链、依赖与基础软件包:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew <span class="hljs-built_in">unlink</span> awk<br>brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz<br>brew install gcc@11<br></code></pre></td></tr></table></figure></li><li><p>然后输入以下命令，添加到系统环境变量中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/coreutils/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/findutils/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/gnu-getopt/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/grep/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/usr/local/opt/make/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br></code></pre></td></tr></table></figure></li><li><p>重新加载一下 bash 启动文件 <code>source ~/.bashrc</code>，然后输入 <code>bash</code> 进入 bash bash，就可以和 Linux 一样正常编译了</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
